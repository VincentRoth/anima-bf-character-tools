{
  "root": true,
  "ignorePatterns": ["projects/**/*"],
  "env": { "browser": true, "es2020": true },
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:prettier/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "plugins": ["deprecation", "import", "prettier"],
      "rules": {
        "@angular-eslint/component-selector": [
          "error",
          { "type": "element", "prefix": "app", "style": "kebab-case" }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          { "type": "attribute", "prefix": "app", "style": "camelCase" }
        ],
        "@angular-eslint/no-conflicting-lifecycle": "error",
        "@angular-eslint/no-host-metadata-property": "error",
        "@angular-eslint/no-input-rename": "error",
        "@angular-eslint/no-inputs-metadata-property": "error",
        "@angular-eslint/no-output-native": "error",
        "@angular-eslint/no-output-on-prefix": "error",
        "@angular-eslint/no-output-rename": "error",
        "@angular-eslint/no-outputs-metadata-property": "error",
        "@angular-eslint/use-lifecycle-interface": "error",
        "@angular-eslint/use-pipe-transform-interface": "error",
        "@typescript-eslint/array-type": "error",
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": {
              "order": "alphabetically",
              "memberTypes": [
                "signature",
                "static-field",
                "public-field",
                "protected-field",
                "private-field",
                "constructor",
                "static-method",
                "public-method",
                "protected-method",
                "private-method"
              ]
            }
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          { "selector": "default", "format": ["camelCase"] },
          { "selector": "variable", "format": ["camelCase", "UPPER_CASE"], "leadingUnderscore": "allow" },
          { "selector": "property", "format": ["camelCase", "UPPER_CASE"], "leadingUnderscore": "allow" },
          { "selector": "parameter", "format": ["camelCase"], "leadingUnderscore": "allow" },
          { "selector": "enum", "format": ["UPPER_CASE", "PascalCase"] },
          { "selector": "enumMember", "format": ["UPPER_CASE", "PascalCase"] },
          { "selector": "typeLike", "format": ["PascalCase"] }
        ],
        "@typescript-eslint/no-inferrable-types": ["error", { "ignoreParameters": true }],
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/space-before-function-paren": ["error", { "anonymous": "never", "asyncArrow": "always", "named": "never" }],
        "curly": "error",
        "deprecation/deprecation": "error",
        "import/first": "error",
        "import/newline-after-import": "error",
        "import/order": [
          "error",
          {
            "alphabetize": { "order": "asc", "caseInsensitive": true },
            "groups": [
              ["builtin", "external"],
              ["internal", "parent", "sibling"]
            ],
            "newlines-between": "always",
            "pathGroups": [
              {
                "pattern": "@angular/**",
                "group": "external",
                "position": "before"
              }
            ],
            "pathGroupsExcludedImportTypes": ["angular"]
          }
        ],
        "no-alert": "error",
        "no-console": ["error", { "allow": ["warn", "error"] }],
        "no-duplicate-imports": "error",
        "no-empty": "error",
        "no-prototype-builtins": "off",
        "no-undef": "off", // TODO
        "no-unused-vars": "off",
        "prefer-arrow-callback": ["error", { "allowUnboundThis": false }],
        "prettier/prettier": "off",
        "quote-props": ["error", "as-needed"],
        "sort-imports": ["error", { "ignoreCase": true, "ignoreDeclarationSort": true }],
        "space-before-function-paren": "off"
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {}
    }
  ]
}

